
set(GET_LIBRARY_DIRECTORY ${CMAKE_BINARY_DIR} CACHE PATH "Location to keep prebuilt libraries")

if(NOT DEFINED ${TENSORFLOWLITE_VERSION})
   set(TENSORFLOWLITE_VERSION v2.15.0)
endif()
set(TENSORFLOWLITE_INSTALL_DIR ${GET_LIBRARY_DIRECTORY}/tensorflowlite-${TENSORFLOWLITE_VERSION})
set(TENSORFLOWLITE_SOURCE_DIR ${TENSORFLOWLITE_INSTALL_DIR}-src)
set(TENSORFLOWLITE_BUILD_DIR ${TENSORFLOWLITE_INSTALL_DIR}-build)

set(TENSORFLOWLITE_BUILD_OPTIONS -DCMAKE_BUILD_TYPE=Release)

# Build the library
if(NOT EXISTS ${TENSORFLOWLITE_INSTALL_DIR})

   # Fetch the source
   if(NOT EXISTS ${TENSORFLOWLITE_SOURCE_DIR})
      message(CHECK_START "Cloning TensorFlowLite")
      execute_process(COMMAND git clone -b ${TENSORFLOWLITE_VERSION} https://github.com/tensorflow/tensorflow.git ${TENSORFLOWLITE_SOURCE_DIR})
      message(CHECK_PASS "done")
   endif()

   message(CHECK_START "Building TensorFlowLite")
   file(MAKE_DIRECTORY ${TENSORFLOWLITE_BUILD_DIR})
   file(MAKE_DIRECTORY ${TENSORFLOWLITE_INSTALL_DIR})
   if(DEFINED CMAKE_TOOLCHAIN_FILE)
      set(TENSORFLOWLITE_BUILD_OPTIONS ${TENSORFLOWLITE_BUILD_OPTIONS} -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE})
   endif()
   execute_process(COMMAND ${CMAKE_COMMAND} -S ${TENSORFLOWLITE_SOURCE_DIR}/tensorflow/lite -B ${TENSORFLOWLITE_BUILD_DIR} -DCMAKE_INSTALL_PREFIX=${TENSORFLOWLITE_INSTALL_DIR} ${TENSORFLOWLITE_BUILD_OPTIONS})
   execute_process(COMMAND ${CMAKE_COMMAND} --build ${TENSORFLOWLITE_BUILD_DIR} --config Release)
   execute_process(COMMAND ${CMAKE_COMMAND} --install ${TENSORFLOWLITE_BUILD_DIR})
   
   message(CHECK_PASS "done")

endif()


