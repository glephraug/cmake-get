
set(GET_LIBRARY_DIRECTORY ${CMAKE_BINARY_DIR} CACHE PATH "Location to keep prebuilt libraries")

if(NOT DEFINED ${ORBBECSDK_VERSION})
   set(ORBBECSDK_VERSION v1.9.4)
endif()

set(ORBBECSDK_INSTALL_DIR ${GET_LIBRARY_DIRECTORY}/orbbecsdk-${ORBBECSDK_VERSION})
set(ORBBECSDK_SOURCE_DIR ${ORBBECSDK_INSTALL_DIR}-src)
set(ORBBECSDK_BUILD_DIR ${ORBBECSDK_INSTALL_DIR}-build)

set(ORBBECSDK_BUILD_OPTIONS 
   -DCMAKE_BUILD_TYPE=Release
   -DBUILD_EXAMPLES=OFF
)

# Build the library
if(NOT EXISTS ${ORBBECSDK_INSTALL_DIR})

   # Fetch the source
   if(NOT EXISTS ${ORBBECSDK_SOURCE_DIR})
      message(CHECK_START "Cloning OrbbecSDK")
      execute_process(COMMAND git clone -b ${ORBBECSDK_VERSION} https://github.com/orbbec/OrbbecSDK.git ${ORBBECSDK_SOURCE_DIR})
      message(CHECK_PASS "done")
   endif()

   message(CHECK_START "Building OrbbecSDK")
   file(MAKE_DIRECTORY ${ORBBECSDK_BUILD_DIR})
   file(MAKE_DIRECTORY ${ORBBECSDK_INSTALL_DIR})
   if(DEFINED CMAKE_TOOLCHAIN_FILE)
      set(ORBBECSDK_BUILD_OPTIONS ${ORBBECSDK_BUILD_OPTIONS} -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE})
   endif()
   execute_process(COMMAND ${CMAKE_COMMAND} -S ${ORBBECSDK_SOURCE_DIR} -B ${ORBBECSDK_BUILD_DIR} -DCMAKE_INSTALL_PREFIX=${ORBBECSDK_INSTALL_DIR} ${ORBBECSDK_BUILD_OPTIONS})
   execute_process(COMMAND ${CMAKE_COMMAND} --build ${ORBBECSDK_BUILD_DIR} --config Release)
   execute_process(COMMAND ${CMAKE_COMMAND} --install ${ORBBECSDK_BUILD_DIR})

   # OrbbecSDK overwrites CMAKE_INSTALL_PREFIX, so we have to move it ourselves
   file(COPY ${ORBBECSDK_BUILD_DIR}/install/bin DESTINATION ${ORBBECSDK_INSTALL_DIR})
   file(COPY ${ORBBECSDK_BUILD_DIR}/install/doc DESTINATION ${ORBBECSDK_INSTALL_DIR})
   file(COPY ${ORBBECSDK_BUILD_DIR}/install/include DESTINATION ${ORBBECSDK_INSTALL_DIR})
   file(COPY ${ORBBECSDK_BUILD_DIR}/install/lib DESTINATION ${ORBBECSDK_INSTALL_DIR})
   file(COPY ${ORBBECSDK_BUILD_DIR}/install/scripts DESTINATION ${ORBBECSDK_INSTALL_DIR})
   
   message(CHECK_PASS "done")

endif()

find_package(OrbbecSDK REQUIRED PATHS ${ORBBECSDK_INSTALL_DIR}/lib NO_DEFAULT_PATH)
