
set(GET_LIBRARY_DIRECTORY ${CMAKE_BINARY_DIR} CACHE PATH "Location to keep prebuilt libraries")

if(NOT DEFINED ${OPENCV_VERSION})
   set(OPENCV_VERSION 4.9.0)
endif()

set(OPENCV_INSTALL_DIR ${GET_LIBRARY_DIRECTORY}/opencv-${OPENCV_VERSION})
set(OPENCV_SOURCE_DIR ${OPENCV_INSTALL_DIR}-src)
set(OPENCV_BUILD_DIR ${OPENCV_INSTALL_DIR}-build)

set(OPENCV_BUILD_OPTIONS 
   -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF 
   -DBUILD_EXAMPLES=OFF -DBUILD_ANDROID_EXAMPLES=OFF -DBUILD_opencv_apps=OFF
   -DBUILD_SHARED_LIBS=OFF
)

# Build the library
if(NOT EXISTS ${OPENCV_INSTALL_DIR})

   # Fetch the source
   if(NOT EXISTS ${OPENCV_SOURCE_DIR})
      message(CHECK_START "Cloning OpenCV")
      execute_process(COMMAND git clone -b ${OPENCV_VERSION} https://github.com/opencv/opencv.git ${OPENCV_SOURCE_DIR})
      message(CHECK_PASS "done")
   endif()

   message(CHECK_START "Building OpenCV")
   file(MAKE_DIRECTORY ${OPENCV_BUILD_DIR})
   file(MAKE_DIRECTORY ${OPENCV_INSTALL_DIR})
   if(DEFINED CMAKE_TOOLCHAIN_FILE)
      set(OPENCV_BUILD_OPTIONS ${OPENCV_BUILD_OPTIONS} -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE})
   endif()
   execute_process(COMMAND ${CMAKE_COMMAND} -S ${OPENCV_SOURCE_DIR} -B ${OPENCV_BUILD_DIR} -DCMAKE_INSTALL_PREFIX=${OPENCV_INSTALL_DIR} ${OPENCV_BUILD_OPTIONS})
   execute_process(COMMAND ${CMAKE_COMMAND} --build ${OPENCV_BUILD_DIR} --config Release)
   execute_process(COMMAND ${CMAKE_COMMAND} --install ${OPENCV_BUILD_DIR})
   
   message(CHECK_PASS "done")

endif()

find_package(OpenCV REQUIRED PATHS ${OPENCV_INSTALL_DIR} NO_DEFAULT_PATH)
